name: Build and Deploy Lambda Container

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: chatbot-lambda
  LAMBDA_FUNCTION_NAME: chatbot-container

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: aws
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        cd backend
        docker build --platform linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        echo "IMAGE_URI=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV
        
    - name: Create or Update Lambda Function
      run: |
        # Check if function exists
        if aws lambda get-function --function-name $LAMBDA_FUNCTION_NAME --region $AWS_REGION >/dev/null 2>&1; then
          echo "Function exists, updating..."
          aws lambda update-function-code \
            --function-name $LAMBDA_FUNCTION_NAME \
            --image-uri $IMAGE_URI \
            --region $AWS_REGION
        else
          echo "Function doesn't exist, creating..."
          aws lambda create-function \
            --function-name $LAMBDA_FUNCTION_NAME \
            --package-type Image \
            --code ImageUri=$IMAGE_URI \
            --role arn:aws:iam::090163643302:role/chatbot-lambda-role \
            --region $AWS_REGION \
            --timeout 30 \
            --memory-size 512 \
            --description "Chatbot Lambda function with Pydantic support"
        fi
        
    - name: Add API Gateway permission
      run: |
        aws lambda add-permission \
          --function-name $LAMBDA_FUNCTION_NAME \
          --statement-id apigateway-invoke \
          --action lambda:InvokeFunction \
          --principal apigateway.amazonaws.com \
          --region $AWS_REGION || echo "Permission may already exist"
